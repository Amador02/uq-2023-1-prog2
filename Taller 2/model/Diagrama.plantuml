@startuml Diagrama Taller Herencia

skinparam Linetype ortho
skinparam style strictuml

class Banco {
    #nombre : String
    #direccion : String
    #codigo : String
    +Banco(nombre: String, direccion: String, codigo: String)

    +agregarCuentaAhorros(codigo: String, saldo: float, tasaAnual: float) : void
    +agregarCuentaCorriente(codigo: String, saldo: float, tasaAnual: float) : void
    +eliminarCuenta(codigo: String) : void
    +buscarCuenta(codigo: String) : Cuenta
    +validarCuenta(codigo: String) : boolean
    +consignarDineroCuenta(codigo: String, dinero: float) : void
    +retirarDineroCuenta(codigo: String, dinero: float) : void
    +activarCuentaAhorros(codigo: String, saldoAAgregar: float) : void
    +calcularInteresesCuenta(codigo: String) : void
    +extraerMensualCuenta(codigo: String) : void
    +imprimirCuenta(codigo: String) : void
    +estaActivaCuenta(codigo: String) : boolean
    +obtenerSobregiroCuenta(codigo: String) : float
    +actualizarCuenta(cuenta: Cuenta) : void
    -buscarCuentaOError(codigo: String) : void
}

abstract class Cuenta <<abstract>> {
    #codigo : String
    #saldo : float
    #numConsignaciones : int
    #numRetiros : int
    #tasaAnual : float
    #comisionMensual : float

    +Cuenta(codigo: String, saldo: float, tasaAnual: float)

    +consignarDinero(saldo: float) : void
    +retirarDinero(saldo: float) : void
    +calcularInteres() : void
    +extractoMensual() : void
    +<i>imprimir() : String
}

class CuentaAhorros {
    +CuentaAhorros(codigo: String, saldo: float, tasaAnual: float)

    +estaActiva() : boolean
    +consignarDinero(saldo: float) : void
    +retirarDinero(saldo: float) : void
    +extractoMensual() : void
    +activarCuenta(saldoAAgregar: float) : void
    +imprimir() : String
}
class CuentaCorriente {
    #sobregiro : float

    +CuentaCorriente(codigo: String, saldo: float, tasaAnual: float)

    +consignarDinero(saldo: float) : void
    +retirarDinero(saldo: float) : void
    +imprimir() : String
    -haySobregiro() : boolean
}

class CuentaException <<exception>> {
    +CuentaException(msg: String)
}

class Util {
    darFormato(format: String, args: Object...) : String
    darFormatoDinero(args: Object...) : String
}

Banco " 1 " o--- " * " Cuenta : -listaCuentas

Cuenta .up.> CuentaException : <<send>>
CuentaAhorros .up.> CuentaException : <<send>>
CuentaCorriente .up.> CuentaException : <<send>>
Banco .up..> CuentaException : <<send>>

CuentaAhorros ..down.> Util : <<use>>
CuentaCorriente ..down.> Util : <<use>>

CuentaAhorros -right-|> Cuenta
CuentaCorriente -left-|> Cuenta
@enduml