@startuml Diagram

skinparam Class {
    FontName Arial
    FontSize 15

    BorderColor DarkBlue
    BackgroundColor APPLICATION
    BorderThickness 3
    ArrowColor DarkBlue
    ArrowThickness 2
    HeaderBackgroundColor Aquamarine
}
skinparam MinClassWidth 200

enum AccountType <<enumeration>> {
    CORRIENTE
    AHORROS
}
class Bank {
    -name : String
    -code : String

    +getName() : String
    +setName(String)
    +getCode() : String
    +setCode(String)

    +addBankAccount(String, String, String, AccountType) : String
    +addClient(String, String, String) : String
    +removeBankAccount(String) : String
    +removeClient(String) : String
    +searchBankAccount(String) : BankAccount
    +searchClient(String) : Client
    +validateClient(String) : boolean
    +validateBankAccount(String) : boolean
    +sendBalance(String, String, Double)

}
class Client{
    -name : String
    -lastname : String
    -code : String

    +getName() : String
    +setName(String)
    +getLastName() : String
    +setLastName(String)
    +getCode() : String
    +setCode(String)
    +addBankAccount(BankAccount) : String

}
class BankAccount {
    -accountNumber : String
    -accountType : AccountType

    +getAccountNumber()
    +setAccountNumber(String)
    +getAccountType()
    +setAccountType(String)
    +consignBalance(Double)
    +withDrawBalance(Double)
    +compareBalanceTo(BankAccount)
    +sendBalance(BankAccount, Double)
}
Bank o-- BankAccount : +bankAccountList
Client o-- BankAccount : +bankAccountList
Bank o-- Client : +ClientList
Bank -->  AccountType
Client -->  BankAccount
BankAccount -->  AccountType
@enduml